// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_backend.Data;

#nullable disable

namespace dotnet_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250415185326_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dotnet_backend.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Comentário 1",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Comentário 2",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Comentário 3",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Comentário 4",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Comentário 5",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Comentário 6",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Comentário 7",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Comentário 8",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Comentário 9",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Comentário 10",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2L,
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("dotnet_backend.Models.Friendship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("FriendId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("UserId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("dotnet_backend.Models.Like", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1L,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("dotnet_backend.Models.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Post 1",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Post 2",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Post 3",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Post 4",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Post 5",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Post 6",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Post 7",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Post 8",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Post 9",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Post 10",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("dotnet_backend.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvatarUrl = "UrlDoUsuario1",
                            Bio = "Sou o Usuário 1",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@email.com",
                            Name = "Usuário 1",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2L,
                            AvatarUrl = "UrlDoUsuario2",
                            Bio = "Sou o Usuário 2",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@email.com",
                            Name = "Usuário 2",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3L,
                            AvatarUrl = "UrlDoUsuario3",
                            Bio = "Sou o Usuário 3",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@email.com",
                            Name = "Usuário 3",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user3"
                        },
                        new
                        {
                            Id = 4L,
                            AvatarUrl = "UrlDoUsuario4",
                            Bio = "Sou o Usuário 4",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@email.com",
                            Name = "Usuário 4",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user4"
                        },
                        new
                        {
                            Id = 5L,
                            AvatarUrl = "UrlDoUsuario5",
                            Bio = "Sou o Usuário 5",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@email.com",
                            Name = "Usuário 5",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user5"
                        },
                        new
                        {
                            Id = 6L,
                            AvatarUrl = "UrlDoUsuario6",
                            Bio = "Sou o Usuário 6",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@email.com",
                            Name = "Usuário 6",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user6"
                        },
                        new
                        {
                            Id = 7L,
                            AvatarUrl = "UrlDoUsuario7",
                            Bio = "Sou o Usuário 7",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@email.com",
                            Name = "Usuário 7",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user7"
                        },
                        new
                        {
                            Id = 8L,
                            AvatarUrl = "UrlDoUsuario8",
                            Bio = "Sou o Usuário 8",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@email.com",
                            Name = "Usuário 8",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user8"
                        },
                        new
                        {
                            Id = 9L,
                            AvatarUrl = "UrlDoUsuario9",
                            Bio = "Sou o Usuário 9",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@email.com",
                            Name = "Usuário 9",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user9"
                        },
                        new
                        {
                            Id = 10L,
                            AvatarUrl = "UrlDoUsuario10",
                            Bio = "Sou o Usuário 10",
                            CreatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@email.com",
                            Name = "Usuário 10",
                            Password = "123",
                            UpdatedAt = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user10"
                        });
                });

            modelBuilder.Entity("dotnet_backend.Models.Comment", b =>
                {
                    b.HasOne("dotnet_backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_backend.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_backend.Models.Friendship", b =>
                {
                    b.HasOne("dotnet_backend.Models.User", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("dotnet_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_backend.Models.Like", b =>
                {
                    b.HasOne("dotnet_backend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_backend.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_backend.Models.Post", b =>
                {
                    b.HasOne("dotnet_backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_backend.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
